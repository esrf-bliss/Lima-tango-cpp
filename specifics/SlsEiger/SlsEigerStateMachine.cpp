/*----- PROTECTED REGION ID(SlsEigerStateMachine.cpp) ENABLED START -----*/
static const char *RcsId = "$Id:  $";
//=============================================================================
//
// file :        SlsEigerStateMachine.cpp
//
// description : State machine file for the SlsEiger class
//
// project :     Sls dectector TANGO specific device.
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
// $Author:  $
//
// $Revision:  $
// $Date:  $
//
// $HeadURL:  $
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================

#include <SlsEiger.h>

/*----- PROTECTED REGION END -----*/	//	SlsEiger::SlsEigerStateMachine.cpp

//================================================================
//  States   |  Description
//================================================================
//  INIT     |  
//  STANDBY  |  
//  FAULT    |  
//  RUNNING  |  


namespace SlsEiger_ns
{
//=================================================
//		Attributes Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : SlsEiger::is_clockDivider_allowed()
 *	Description : Execution allowed for clockDivider attribute
 */
//--------------------------------------------------------
bool SlsEiger::is_clockDivider_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT ||
			get_state()==Tango::RUNNING)
		{
		/*----- PROTECTED REGION ID(SlsEiger::clockDividerStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SlsEiger::clockDividerStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(SlsEiger::clockDividerStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SlsEiger::clockDividerStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SlsEiger::is_parallelMode_allowed()
 *	Description : Execution allowed for parallelMode attribute
 */
//--------------------------------------------------------
bool SlsEiger::is_parallelMode_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT ||
			get_state()==Tango::RUNNING)
		{
		/*----- PROTECTED REGION ID(SlsEiger::parallelModeStateAllowed_WRITE) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SlsEiger::parallelModeStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(SlsEiger::parallelModeStateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SlsEiger::parallelModeStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SlsEiger::is_overflowMode_allowed()
 *	Description : Execution allowed for overflowMode attribute
 */
//--------------------------------------------------------
bool SlsEiger::is_overflowMode_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT ||
			get_state()==Tango::RUNNING)
		{
		/*----- PROTECTED REGION ID(SlsEiger::overflowModeStateAllowed_WRITE) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SlsEiger::overflowModeStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(SlsEiger::overflowModeStateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SlsEiger::overflowModeStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SlsEiger::is_subFrameExposureTime_allowed()
 *	Description : Execution allowed for subFrameExposureTime attribute
 */
//--------------------------------------------------------
bool SlsEiger::is_subFrameExposureTime_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT ||
			get_state()==Tango::RUNNING)
		{
		/*----- PROTECTED REGION ID(SlsEiger::subFrameExposureTimeStateAllowed_WRITE) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SlsEiger::subFrameExposureTimeStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(SlsEiger::subFrameExposureTimeStateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SlsEiger::subFrameExposureTimeStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SlsEiger::is_gainMode_allowed()
 *	Description : Execution allowed for gainMode attribute
 */
//--------------------------------------------------------
bool SlsEiger::is_gainMode_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT ||
			get_state()==Tango::RUNNING)
		{
		/*----- PROTECTED REGION ID(SlsEiger::gainModeStateAllowed_WRITE) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SlsEiger::gainModeStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(SlsEiger::gainModeStateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SlsEiger::gainModeStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SlsEiger::is_thresholdEnergy_allowed()
 *	Description : Execution allowed for thresholdEnergy attribute
 */
//--------------------------------------------------------
bool SlsEiger::is_thresholdEnergy_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT ||
			get_state()==Tango::RUNNING)
		{
		/*----- PROTECTED REGION ID(SlsEiger::thresholdEnergyStateAllowed_WRITE) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SlsEiger::thresholdEnergyStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(SlsEiger::thresholdEnergyStateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SlsEiger::thresholdEnergyStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SlsEiger::is_countRateCorrectionActivation_allowed()
 *	Description : Execution allowed for countRateCorrectionActivation attribute
 */
//--------------------------------------------------------
bool SlsEiger::is_countRateCorrectionActivation_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT ||
			get_state()==Tango::RUNNING)
		{
		/*----- PROTECTED REGION ID(SlsEiger::countRateCorrectionActivationStateAllowed_WRITE) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SlsEiger::countRateCorrectionActivationStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(SlsEiger::countRateCorrectionActivationStateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SlsEiger::countRateCorrectionActivationStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SlsEiger::is_countRateCorrection_allowed()
 *	Description : Execution allowed for countRateCorrection attribute
 */
//--------------------------------------------------------
bool SlsEiger::is_countRateCorrection_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(SlsEiger::countRateCorrectionStateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SlsEiger::countRateCorrectionStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SlsEiger::is_gapPixelsActivation_allowed()
 *	Description : Execution allowed for gapPixelsActivation attribute
 */
//--------------------------------------------------------
bool SlsEiger::is_gapPixelsActivation_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT ||
			get_state()==Tango::RUNNING)
		{
		/*----- PROTECTED REGION ID(SlsEiger::gapPixelsActivationStateAllowed_WRITE) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SlsEiger::gapPixelsActivationStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(SlsEiger::gapPixelsActivationStateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SlsEiger::gapPixelsActivationStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SlsEiger::is_edgePixelsCorrection_allowed()
 *	Description : Execution allowed for edgePixelsCorrection attribute
 */
//--------------------------------------------------------
bool SlsEiger::is_edgePixelsCorrection_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(SlsEiger::edgePixelsCorrectionStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SlsEiger::edgePixelsCorrectionStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(SlsEiger::edgePixelsCorrectionStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SlsEiger::edgePixelsCorrectionStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SlsEiger::is_cornerPixelsCorrection_allowed()
 *	Description : Execution allowed for cornerPixelsCorrection attribute
 */
//--------------------------------------------------------
bool SlsEiger::is_cornerPixelsCorrection_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(SlsEiger::cornerPixelsCorrectionStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SlsEiger::cornerPixelsCorrectionStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(SlsEiger::cornerPixelsCorrectionStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SlsEiger::cornerPixelsCorrectionStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SlsEiger::is_configFileName_allowed()
 *	Description : Execution allowed for configFileName attribute
 */
//--------------------------------------------------------
bool SlsEiger::is_configFileName_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(SlsEiger::configFileNameStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SlsEiger::configFileNameStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SlsEiger::is_detectorFirmwareVersion_allowed()
 *	Description : Execution allowed for detectorFirmwareVersion attribute
 */
//--------------------------------------------------------
bool SlsEiger::is_detectorFirmwareVersion_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(SlsEiger::detectorFirmwareVersionStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SlsEiger::detectorFirmwareVersionStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SlsEiger::is_detectorSoftwareVersion_allowed()
 *	Description : Execution allowed for detectorSoftwareVersion attribute
 */
//--------------------------------------------------------
bool SlsEiger::is_detectorSoftwareVersion_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(SlsEiger::detectorSoftwareVersionStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SlsEiger::detectorSoftwareVersionStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SlsEiger::is_tempFpga1_allowed()
 *	Description : Execution allowed for tempFpga1 attribute
 */
//--------------------------------------------------------
bool SlsEiger::is_tempFpga1_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(SlsEiger::tempFpga1StateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SlsEiger::tempFpga1StateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SlsEiger::is_tempFpga2_allowed()
 *	Description : Execution allowed for tempFpga2 attribute
 */
//--------------------------------------------------------
bool SlsEiger::is_tempFpga2_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(SlsEiger::tempFpga2StateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SlsEiger::tempFpga2StateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SlsEiger::is_tempFpgaext1_allowed()
 *	Description : Execution allowed for tempFpgaext1 attribute
 */
//--------------------------------------------------------
bool SlsEiger::is_tempFpgaext1_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(SlsEiger::tempFpgaext1StateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SlsEiger::tempFpgaext1StateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SlsEiger::is_tempFpgaext2_allowed()
 *	Description : Execution allowed for tempFpgaext2 attribute
 */
//--------------------------------------------------------
bool SlsEiger::is_tempFpgaext2_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(SlsEiger::tempFpgaext2StateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SlsEiger::tempFpgaext2StateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SlsEiger::is_temp10ge1_allowed()
 *	Description : Execution allowed for temp10ge1 attribute
 */
//--------------------------------------------------------
bool SlsEiger::is_temp10ge1_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(SlsEiger::temp10ge1StateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SlsEiger::temp10ge1StateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SlsEiger::is_temp10ge2_allowed()
 *	Description : Execution allowed for temp10ge2 attribute
 */
//--------------------------------------------------------
bool SlsEiger::is_temp10ge2_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(SlsEiger::temp10ge2StateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SlsEiger::temp10ge2StateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SlsEiger::is_tempDcdc1_allowed()
 *	Description : Execution allowed for tempDcdc1 attribute
 */
//--------------------------------------------------------
bool SlsEiger::is_tempDcdc1_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(SlsEiger::tempDcdc1StateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SlsEiger::tempDcdc1StateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SlsEiger::is_tempDcdc2_allowed()
 *	Description : Execution allowed for tempDcdc2 attribute
 */
//--------------------------------------------------------
bool SlsEiger::is_tempDcdc2_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(SlsEiger::tempDcdc2StateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SlsEiger::tempDcdc2StateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SlsEiger::is_tempSodl1_allowed()
 *	Description : Execution allowed for tempSodl1 attribute
 */
//--------------------------------------------------------
bool SlsEiger::is_tempSodl1_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(SlsEiger::tempSodl1StateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SlsEiger::tempSodl1StateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SlsEiger::is_tempSodl2_allowed()
 *	Description : Execution allowed for tempSodl2 attribute
 */
//--------------------------------------------------------
bool SlsEiger::is_tempSodl2_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(SlsEiger::tempSodl2StateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SlsEiger::tempSodl2StateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SlsEiger::is_tempSodr1_allowed()
 *	Description : Execution allowed for tempSodr1 attribute
 */
//--------------------------------------------------------
bool SlsEiger::is_tempSodr1_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(SlsEiger::tempSodr1StateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SlsEiger::tempSodr1StateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SlsEiger::is_tempSodr2_allowed()
 *	Description : Execution allowed for tempSodr2 attribute
 */
//--------------------------------------------------------
bool SlsEiger::is_tempSodr2_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(SlsEiger::tempSodr2StateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SlsEiger::tempSodr2StateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SlsEiger::is_tempFpgafl1_allowed()
 *	Description : Execution allowed for tempFpgafl1 attribute
 */
//--------------------------------------------------------
bool SlsEiger::is_tempFpgafl1_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(SlsEiger::tempFpgafl1StateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SlsEiger::tempFpgafl1StateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SlsEiger::is_tempFpgafl2_allowed()
 *	Description : Execution allowed for tempFpgafl2 attribute
 */
//--------------------------------------------------------
bool SlsEiger::is_tempFpgafl2_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(SlsEiger::tempFpgafl2StateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SlsEiger::tempFpgafl2StateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SlsEiger::is_tempFpgafr1_allowed()
 *	Description : Execution allowed for tempFpgafr1 attribute
 */
//--------------------------------------------------------
bool SlsEiger::is_tempFpgafr1_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(SlsEiger::tempFpgafr1StateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SlsEiger::tempFpgafr1StateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SlsEiger::is_tempFpgafr2_allowed()
 *	Description : Execution allowed for tempFpgafr2 attribute
 */
//--------------------------------------------------------
bool SlsEiger::is_tempFpgafr2_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::INIT ||
			get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(SlsEiger::tempFpgafr2StateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SlsEiger::tempFpgafr2StateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//=================================================
//		Commands Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : SlsEiger::is_SetCmd_allowed()
 *	Description : Execution allowed for SetCmd attribute
 */
//--------------------------------------------------------
bool SlsEiger::is_SetCmd_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Compare device state with not allowed states.
	if (get_state()==Tango::INIT ||
		get_state()==Tango::RUNNING)
	{
	/*----- PROTECTED REGION ID(SlsEiger::SetCmdStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SlsEiger::SetCmdStateAllowed
		return false;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SlsEiger::is_GetCmd_allowed()
 *	Description : Execution allowed for GetCmd attribute
 */
//--------------------------------------------------------
bool SlsEiger::is_GetCmd_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Compare device state with not allowed states.
	if (get_state()==Tango::INIT ||
		get_state()==Tango::RUNNING)
	{
	/*----- PROTECTED REGION ID(SlsEiger::GetCmdStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SlsEiger::GetCmdStateAllowed
		return false;
	}
	return true;
}

}	//	End of namespace
